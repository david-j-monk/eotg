{"ast":null,"code":"import { ResourceResponse } from \"../../request\";\nexport class ConflictResponse extends ResourceResponse {\n  constructor(resource, headers, statusCode, conflict) {\n    super(resource, headers, statusCode);\n    this.conflict = conflict;\n  }\n\n}","map":{"version":3,"sources":["../../../src/client/Conflict/ConflictResponse.ts"],"names":[],"mappings":"AAGA,SAAS,gBAAT,QAAiC,eAAjC;AAKA,OAAM,MAAO,gBAAP,SAAgC,gBAAhC,CAA+E;AACnF,EAAA,WAAA,CACE,QADF,EAEE,OAFF,EAGE,UAHF,EAIE,QAJF,EAIoB;AAElB,UAAM,QAAN,EAAgB,OAAhB,EAAyB,UAAzB;AACA,SAAK,QAAL,GAAgB,QAAhB;AACD;;AATkF","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { CosmosHeaders } from \"../../queryExecutionContext\";\nimport { ResourceResponse } from \"../../request\";\nimport { Resource } from \"../Resource\";\nimport { Conflict } from \"./Conflict\";\nimport { ConflictDefinition } from \"./ConflictDefinition\";\n\nexport class ConflictResponse extends ResourceResponse<ConflictDefinition & Resource> {\n  constructor(\n    resource: ConflictDefinition & Resource,\n    headers: CosmosHeaders,\n    statusCode: number,\n    conflict: Conflict\n  ) {\n    super(resource, headers, statusCode);\n    this.conflict = conflict;\n  }\n  /** A reference to the {@link Conflict} corresponding to the returned {@link ConflictDefinition}. */\n  public readonly conflict: Conflict;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}