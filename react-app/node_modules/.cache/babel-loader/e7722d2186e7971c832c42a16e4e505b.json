{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nexport class ClientSideMetrics {\n  constructor(requestCharge) {\n    this.requestCharge = requestCharge;\n  }\n  /**\n   * Adds one or more ClientSideMetrics to a copy of this instance and returns the result.\n   */\n\n\n  add(...clientSideMetricsArray) {\n    let requestCharge = this.requestCharge;\n\n    for (const clientSideMetrics of clientSideMetricsArray) {\n      if (clientSideMetrics == null) {\n        throw new Error(\"clientSideMetrics has null or undefined item(s)\");\n      }\n\n      requestCharge += clientSideMetrics.requestCharge;\n    }\n\n    return new ClientSideMetrics(requestCharge);\n  }\n\n  static createFromArray(...clientSideMetricsArray) {\n    if (clientSideMetricsArray == null) {\n      throw new Error(\"clientSideMetricsArray is null or undefined item(s)\");\n    }\n\n    return this.zero.add(...clientSideMetricsArray);\n  }\n\n}\nClientSideMetrics.zero = new ClientSideMetrics(0);","map":{"version":3,"sources":["../../src/queryMetrics/clientSideMetrics.ts"],"names":[],"mappings":"AAAA;AACA;AAEA,OAAM,MAAO,iBAAP,CAAwB;AAC5B,EAAA,WAAA,CAA4B,aAA5B,EAAiD;AAArB,SAAA,aAAA,GAAA,aAAA;AAAyB;AAErD;;;;;AAGO,EAAA,GAAG,CAAC,GAAG,sBAAJ,EAA+C;AACvD,QAAI,aAAa,GAAG,KAAK,aAAzB;;AACA,SAAK,MAAM,iBAAX,IAAgC,sBAAhC,EAAwD;AACtD,UAAI,iBAAiB,IAAI,IAAzB,EAA+B;AAC7B,cAAM,IAAI,KAAJ,CAAU,iDAAV,CAAN;AACD;;AAED,MAAA,aAAa,IAAI,iBAAiB,CAAC,aAAnC;AACD;;AAED,WAAO,IAAI,iBAAJ,CAAsB,aAAtB,CAAP;AACD;;AAIM,SAAO,eAAP,CAAuB,GAAG,sBAA1B,EAAqE;AAC1E,QAAI,sBAAsB,IAAI,IAA9B,EAAoC;AAClC,YAAM,IAAI,KAAJ,CAAU,qDAAV,CAAN;AACD;;AAED,WAAO,KAAK,IAAL,CAAU,GAAV,CAAc,GAAG,sBAAjB,CAAP;AACD;;AA3B2B;AAmBL,iBAAA,CAAA,IAAA,GAAO,IAAI,iBAAJ,CAAsB,CAAtB,CAAP","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nexport class ClientSideMetrics {\n  constructor(public readonly requestCharge: number) {}\n\n  /**\n   * Adds one or more ClientSideMetrics to a copy of this instance and returns the result.\n   */\n  public add(...clientSideMetricsArray: ClientSideMetrics[]) {\n    let requestCharge = this.requestCharge;\n    for (const clientSideMetrics of clientSideMetricsArray) {\n      if (clientSideMetrics == null) {\n        throw new Error(\"clientSideMetrics has null or undefined item(s)\");\n      }\n\n      requestCharge += clientSideMetrics.requestCharge;\n    }\n\n    return new ClientSideMetrics(requestCharge);\n  }\n\n  public static readonly zero = new ClientSideMetrics(0);\n\n  public static createFromArray(...clientSideMetricsArray: ClientSideMetrics[]) {\n    if (clientSideMetricsArray == null) {\n      throw new Error(\"clientSideMetricsArray is null or undefined item(s)\");\n    }\n\n    return this.zero.add(...clientSideMetricsArray);\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}