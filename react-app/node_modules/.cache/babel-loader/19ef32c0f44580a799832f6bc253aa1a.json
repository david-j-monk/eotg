{"ast":null,"code":"import { __awaiter } from \"tslib\";\n/** @hidden */\n\nexport class OrderByEndpointComponent {\n  /**\n   * Represents an endpoint in handling an order by query. For each processed orderby \\\n   * result it returns 'payload' item of the result\n   * @constructor OrderByEndpointComponent\n   * @param {object} executionContext              - Underlying Execution Context\n   * @ignore\n   */\n  constructor(executionContext) {\n    this.executionContext = executionContext;\n  }\n  /**\n   * Execute a provided function on the next element in the OrderByEndpointComponent.\n   * @memberof OrderByEndpointComponent\n   * @instance\n   */\n\n\n  nextItem() {\n    return __awaiter(this, void 0, void 0, function* () {\n      const {\n        result: item,\n        headers\n      } = yield this.executionContext.nextItem();\n      return {\n        result: item !== undefined ? item.payload : undefined,\n        headers\n      };\n    });\n  }\n  /**\n   * Determine if there are still remaining resources to processs.\n   * @memberof OrderByEndpointComponent\n   * @instance\n   * @returns {Boolean} true if there is other elements to process in the OrderByEndpointComponent.\n   */\n\n\n  hasMoreResults() {\n    return this.executionContext.hasMoreResults();\n  }\n\n}","map":{"version":3,"sources":["../../../src/queryExecutionContext/EndpointComponent/OrderByEndpointComponent.ts"],"names":[],"mappings":";AAKA;;AACA,OAAM,MAAO,wBAAP,CAA+B;AACnC;;;;;;;AAOA,EAAA,WAAA,CAAoB,gBAApB,EAAsD;AAAlC,SAAA,gBAAA,GAAA,gBAAA;AAAsC;AAC1D;;;;;;;AAKa,EAAA,QAAQ,GAAA;;AACnB,YAAM;AAAE,QAAA,MAAM,EAAE,IAAV;AAAgB,QAAA;AAAhB,UAA4B,MAAM,KAAK,gBAAL,CAAsB,QAAtB,EAAxC;AACA,aAAO;AACL,QAAA,MAAM,EAAE,IAAI,KAAK,SAAT,GAAqB,IAAI,CAAC,OAA1B,GAAoC,SADvC;AAEL,QAAA;AAFK,OAAP;AAID,K;AAAA;AAED;;;;;;;;AAMO,EAAA,cAAc,GAAA;AACnB,WAAO,KAAK,gBAAL,CAAsB,cAAtB,EAAP;AACD;;AA9BkC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { Response } from \"../../request\";\nimport { ExecutionContext } from \"../ExecutionContext\";\n\n/** @hidden */\nexport class OrderByEndpointComponent implements ExecutionContext {\n  /**\n   * Represents an endpoint in handling an order by query. For each processed orderby \\\n   * result it returns 'payload' item of the result\n   * @constructor OrderByEndpointComponent\n   * @param {object} executionContext              - Underlying Execution Context\n   * @ignore\n   */\n  constructor(private executionContext: ExecutionContext) {}\n  /**\n   * Execute a provided function on the next element in the OrderByEndpointComponent.\n   * @memberof OrderByEndpointComponent\n   * @instance\n   */\n  public async nextItem(): Promise<Response<any>> {\n    const { result: item, headers } = await this.executionContext.nextItem();\n    return {\n      result: item !== undefined ? item.payload : undefined,\n      headers\n    };\n  }\n\n  /**\n   * Determine if there are still remaining resources to processs.\n   * @memberof OrderByEndpointComponent\n   * @instance\n   * @returns {Boolean} true if there is other elements to process in the OrderByEndpointComponent.\n   */\n  public hasMoreResults() {\n    return this.executionContext.hasMoreResults();\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}