{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { __awaiter } from \"tslib\";\nimport { hmac } from \"./hmac\";\nimport { ResourceType, Constants } from \"../common\";\nexport function generateHeaders(masterKey, method, resourceType = ResourceType.none, resourceId = \"\", date = new Date()) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const sig = yield signature(masterKey, method, resourceType, resourceId, date);\n    return {\n      [Constants.HttpHeaders.Authorization]: sig,\n      [Constants.HttpHeaders.XDate]: date.toUTCString()\n    };\n  });\n}\n\nfunction signature(masterKey, method, resourceType, resourceId = \"\", date = new Date()) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const type = \"master\";\n    const version = \"1.0\";\n    const text = method.toLowerCase() + \"\\n\" + resourceType.toLowerCase() + \"\\n\" + resourceId + \"\\n\" + date.toUTCString().toLowerCase() + \"\\n\" + \"\" + \"\\n\";\n    const signed = yield hmac(masterKey, text);\n    return encodeURIComponent(\"type=\" + type + \"&ver=\" + version + \"&sig=\" + signed);\n  });\n}","map":{"version":3,"sources":["../../src/utils/headers.ts"],"names":[],"mappings":"AAAA;AACA;;AAEA,SAAS,IAAT,QAAqB,QAArB;AACA,SAAqB,YAArB,EAAmC,SAAnC,QAAoD,WAApD;AAEA,OAAM,SAAgB,eAAhB,CACJ,SADI,EAEJ,MAFI,EAGJ,YAAA,GAA6B,YAAY,CAAC,IAHtC,EAIJ,UAAA,GAAqB,EAJjB,EAKJ,IAAI,GAAG,IAAI,IAAJ,EALH,EAKa;;AAEjB,UAAM,GAAG,GAAG,MAAM,SAAS,CAAC,SAAD,EAAY,MAAZ,EAAoB,YAApB,EAAkC,UAAlC,EAA8C,IAA9C,CAA3B;AAEA,WAAO;AACL,OAAC,SAAS,CAAC,WAAV,CAAsB,aAAvB,GAAuC,GADlC;AAEL,OAAC,SAAS,CAAC,WAAV,CAAsB,KAAvB,GAA+B,IAAI,CAAC,WAAL;AAF1B,KAAP;AAID,G;AAAA;;AAED,SAAe,SAAf,CACE,SADF,EAEE,MAFF,EAGE,YAHF,EAIE,UAAA,GAAqB,EAJvB,EAKE,IAAI,GAAG,IAAI,IAAJ,EALT,EAKmB;;AAEjB,UAAM,IAAI,GAAG,QAAb;AACA,UAAM,OAAO,GAAG,KAAhB;AACA,UAAM,IAAI,GACR,MAAM,CAAC,WAAP,KACA,IADA,GAEA,YAAY,CAAC,WAAb,EAFA,GAGA,IAHA,GAIA,UAJA,GAKA,IALA,GAMA,IAAI,CAAC,WAAL,GAAmB,WAAnB,EANA,GAOA,IAPA,GAQA,EARA,GASA,IAVF;AAYA,UAAM,MAAM,GAAG,MAAM,IAAI,CAAC,SAAD,EAAY,IAAZ,CAAzB;AAEA,WAAO,kBAAkB,CAAC,UAAU,IAAV,GAAiB,OAAjB,GAA2B,OAA3B,GAAqC,OAArC,GAA+C,MAAhD,CAAzB;AACD,G;AAAA","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { hmac } from \"./hmac\";\nimport { HTTPMethod, ResourceType, Constants } from \"../common\";\n\nexport async function generateHeaders(\n  masterKey: string,\n  method: HTTPMethod,\n  resourceType: ResourceType = ResourceType.none,\n  resourceId: string = \"\",\n  date = new Date()\n) {\n  const sig = await signature(masterKey, method, resourceType, resourceId, date);\n\n  return {\n    [Constants.HttpHeaders.Authorization]: sig,\n    [Constants.HttpHeaders.XDate]: date.toUTCString()\n  };\n}\n\nasync function signature(\n  masterKey: string,\n  method: HTTPMethod,\n  resourceType: ResourceType,\n  resourceId: string = \"\",\n  date = new Date()\n) {\n  const type = \"master\";\n  const version = \"1.0\";\n  const text =\n    method.toLowerCase() +\n    \"\\n\" +\n    resourceType.toLowerCase() +\n    \"\\n\" +\n    resourceId +\n    \"\\n\" +\n    date.toUTCString().toLowerCase() +\n    \"\\n\" +\n    \"\" +\n    \"\\n\";\n\n  const signed = await hmac(masterKey, text);\n\n  return encodeURIComponent(\"type=\" + type + \"&ver=\" + version + \"&sig=\" + signed);\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}