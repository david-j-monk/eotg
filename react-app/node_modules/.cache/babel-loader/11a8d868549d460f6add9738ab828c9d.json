{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { __awaiter } from \"tslib\";\nimport { encodeUTF8 } from \"./encode\";\nimport { globalCrypto } from \"./globalCrypto\";\nexport function digest(str) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const data = encodeUTF8(str);\n    const hash = yield globalCrypto.subtle.digest(\"SHA-256\", data);\n    return bufferToHex(hash);\n  });\n}\n\nfunction bufferToHex(buffer) {\n  return Array.prototype.map.call(new Uint8Array(buffer), item => (\"00\" + item.toString(16)).slice(-2)).join(\"\");\n}","map":{"version":3,"sources":["../../src/utils/digest.browser.ts"],"names":[],"mappings":"AAAA;AACA;;AAEA,SAAS,UAAT,QAA2B,UAA3B;AACA,SAAS,YAAT,QAA6B,gBAA7B;AAEA,OAAM,SAAgB,MAAhB,CAAuB,GAAvB,EAAkC;;AACtC,UAAM,IAAI,GAAG,UAAU,CAAC,GAAD,CAAvB;AACA,UAAM,IAAI,GAAG,MAAM,YAAY,CAAC,MAAb,CAAoB,MAApB,CAA2B,SAA3B,EAAsC,IAAtC,CAAnB;AACA,WAAO,WAAW,CAAC,IAAD,CAAlB;AACD,G;AAAA;;AAED,SAAS,WAAT,CAAqB,MAArB,EAAwC;AACtC,SAAO,KAAK,CAAC,SAAN,CAAgB,GAAhB,CACJ,IADI,CACC,IAAI,UAAJ,CAAe,MAAf,CADD,EAC0B,IAAD,IAAkB,CAAC,OAAO,IAAI,CAAC,QAAL,CAAc,EAAd,CAAR,EAA2B,KAA3B,CAAiC,CAAC,CAAlC,CAD3C,EAEJ,IAFI,CAEC,EAFD,CAAP;AAGD","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { encodeUTF8 } from \"./encode\";\nimport { globalCrypto } from \"./globalCrypto\";\n\nexport async function digest(str: string) {\n  const data = encodeUTF8(str);\n  const hash = await globalCrypto.subtle.digest(\"SHA-256\", data);\n  return bufferToHex(hash);\n}\n\nfunction bufferToHex(buffer: ArrayBuffer) {\n  return Array.prototype.map\n    .call(new Uint8Array(buffer), (item: number) => (\"00\" + item.toString(16)).slice(-2))\n    .join(\"\");\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}