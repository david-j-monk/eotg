{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { hashObject } from \"../../utils/hashObject\";\n/** @hidden */\n\nexport class UnorderedDistinctEndpointComponent {\n  constructor(executionContext) {\n    this.executionContext = executionContext;\n    this.hashedResults = new Set();\n  }\n\n  nextItem() {\n    return __awaiter(this, void 0, void 0, function* () {\n      const {\n        headers,\n        result\n      } = yield this.executionContext.nextItem();\n\n      if (result) {\n        const hashedResult = yield hashObject(result);\n\n        if (this.hashedResults.has(hashedResult)) {\n          return {\n            result: undefined,\n            headers\n          };\n        }\n\n        this.hashedResults.add(hashedResult);\n      }\n\n      return {\n        result,\n        headers\n      };\n    });\n  }\n\n  hasMoreResults() {\n    return this.executionContext.hasMoreResults();\n  }\n\n}","map":{"version":3,"sources":["../../../src/queryExecutionContext/EndpointComponent/UnorderedDistinctEndpointComponent.ts"],"names":[],"mappings":";AAIA,SAAS,UAAT,QAA2B,wBAA3B;AAEA;;AACA,OAAM,MAAO,kCAAP,CAAyC;AAE7C,EAAA,WAAA,CAAoB,gBAApB,EAAsD;AAAlC,SAAA,gBAAA,GAAA,gBAAA;AAClB,SAAK,aAAL,GAAqB,IAAI,GAAJ,EAArB;AACD;;AAEY,EAAA,QAAQ,GAAA;;AACnB,YAAM;AAAE,QAAA,OAAF;AAAW,QAAA;AAAX,UAAsB,MAAM,KAAK,gBAAL,CAAsB,QAAtB,EAAlC;;AACA,UAAI,MAAJ,EAAY;AACV,cAAM,YAAY,GAAG,MAAM,UAAU,CAAC,MAAD,CAArC;;AACA,YAAI,KAAK,aAAL,CAAmB,GAAnB,CAAuB,YAAvB,CAAJ,EAA0C;AACxC,iBAAO;AAAE,YAAA,MAAM,EAAE,SAAV;AAAqB,YAAA;AAArB,WAAP;AACD;;AACD,aAAK,aAAL,CAAmB,GAAnB,CAAuB,YAAvB;AACD;;AACD,aAAO;AAAE,QAAA,MAAF;AAAU,QAAA;AAAV,OAAP;AACD,K;AAAA;;AAEM,EAAA,cAAc,GAAA;AACnB,WAAO,KAAK,gBAAL,CAAsB,cAAtB,EAAP;AACD;;AApB4C","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { Response } from \"../../request\";\nimport { ExecutionContext } from \"../ExecutionContext\";\nimport { hashObject } from \"../../utils/hashObject\";\n\n/** @hidden */\nexport class UnorderedDistinctEndpointComponent implements ExecutionContext {\n  private hashedResults: Set<string>;\n  constructor(private executionContext: ExecutionContext) {\n    this.hashedResults = new Set();\n  }\n\n  public async nextItem(): Promise<Response<any>> {\n    const { headers, result } = await this.executionContext.nextItem();\n    if (result) {\n      const hashedResult = await hashObject(result);\n      if (this.hashedResults.has(hashedResult)) {\n        return { result: undefined, headers };\n      }\n      this.hashedResults.add(hashedResult);\n    }\n    return { result, headers };\n  }\n\n  public hasMoreResults() {\n    return this.executionContext.hasMoreResults();\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}