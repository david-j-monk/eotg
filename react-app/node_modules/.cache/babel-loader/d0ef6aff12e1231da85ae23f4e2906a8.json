{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * @ignore\n */\nexport const StatusCode = {\n  // Success\n  Ok: 200,\n  Created: 201,\n  Accepted: 202,\n  NoContent: 204,\n  NotModified: 304,\n  // Client error\n  BadRequest: 400,\n  Unauthorized: 401,\n  Forbidden: 403,\n  NotFound: 404,\n  MethodNotAllowed: 405,\n  RequestTimeout: 408,\n  Conflict: 409,\n  Gone: 410,\n  PreconditionFailed: 412,\n  RequestEntityTooLarge: 413,\n  TooManyRequests: 429,\n  RetryWith: 449,\n  // Server Error\n  InternalServerError: 500,\n  ServiceUnavailable: 503,\n  // Operation pause and cancel. These are FAKE status codes for QOS logging purpose only.\n  OperationPaused: 1200,\n  OperationCancelled: 1201\n};\n/**\n * @ignore\n */\n\nexport const SubStatusCode = {\n  Unknown: 0,\n  // 400: Bad Request Substatus\n  CrossPartitionQueryNotServable: 1004,\n  // 410: StatusCodeType_Gone: substatus\n  PartitionKeyRangeGone: 1002,\n  // 404: NotFound Substatus\n  ReadSessionNotAvailable: 1002,\n  // 403: Forbidden Substatus\n  WriteForbidden: 3\n};","map":{"version":3,"sources":["../../src/request/StatusCodes.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;;;AAGA,OAAO,MAAM,UAAU,GAAG;AACxB;AACA,EAAA,EAAE,EAAE,GAFoB;AAGxB,EAAA,OAAO,EAAE,GAHe;AAIxB,EAAA,QAAQ,EAAE,GAJc;AAKxB,EAAA,SAAS,EAAE,GALa;AAMxB,EAAA,WAAW,EAAE,GANW;AAQxB;AACA,EAAA,UAAU,EAAE,GATY;AAUxB,EAAA,YAAY,EAAE,GAVU;AAWxB,EAAA,SAAS,EAAE,GAXa;AAYxB,EAAA,QAAQ,EAAE,GAZc;AAaxB,EAAA,gBAAgB,EAAE,GAbM;AAcxB,EAAA,cAAc,EAAE,GAdQ;AAexB,EAAA,QAAQ,EAAE,GAfc;AAgBxB,EAAA,IAAI,EAAE,GAhBkB;AAiBxB,EAAA,kBAAkB,EAAE,GAjBI;AAkBxB,EAAA,qBAAqB,EAAE,GAlBC;AAmBxB,EAAA,eAAe,EAAE,GAnBO;AAoBxB,EAAA,SAAS,EAAE,GApBa;AAsBxB;AACA,EAAA,mBAAmB,EAAE,GAvBG;AAwBxB,EAAA,kBAAkB,EAAE,GAxBI;AA0BxB;AACA,EAAA,eAAe,EAAE,IA3BO;AA4BxB,EAAA,kBAAkB,EAAE;AA5BI,CAAnB;AAoCP;;;;AAGA,OAAO,MAAM,aAAa,GAAG;AAC3B,EAAA,OAAO,EAAE,CADkB;AAG3B;AACA,EAAA,8BAA8B,EAAE,IAJL;AAM3B;AACA,EAAA,qBAAqB,EAAE,IAPI;AAS3B;AACA,EAAA,uBAAuB,EAAE,IAVE;AAY3B;AACA,EAAA,cAAc,EAAE;AAbW,CAAtB","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * @ignore\n */\nexport const StatusCode = {\n  // Success\n  Ok: 200 as 200,\n  Created: 201 as 201,\n  Accepted: 202 as 202,\n  NoContent: 204 as 204,\n  NotModified: 304 as 304,\n\n  // Client error\n  BadRequest: 400 as 400,\n  Unauthorized: 401 as 401,\n  Forbidden: 403 as 403,\n  NotFound: 404 as 404,\n  MethodNotAllowed: 405 as 405,\n  RequestTimeout: 408 as 408,\n  Conflict: 409 as 409,\n  Gone: 410 as 410,\n  PreconditionFailed: 412 as 412,\n  RequestEntityTooLarge: 413 as 413,\n  TooManyRequests: 429 as 429,\n  RetryWith: 449 as 449,\n\n  // Server Error\n  InternalServerError: 500 as 500,\n  ServiceUnavailable: 503 as 503,\n\n  // Operation pause and cancel. These are FAKE status codes for QOS logging purpose only.\n  OperationPaused: 1200 as 1200,\n  OperationCancelled: 1201\n};\n\n/**\n * @ignore\n */\nexport type StatusCode = typeof StatusCode[keyof typeof StatusCode];\n\n/**\n * @ignore\n */\nexport const SubStatusCode = {\n  Unknown: 0 as 0,\n\n  // 400: Bad Request Substatus\n  CrossPartitionQueryNotServable: 1004 as 1004,\n\n  // 410: StatusCodeType_Gone: substatus\n  PartitionKeyRangeGone: 1002 as 1002,\n\n  // 404: NotFound Substatus\n  ReadSessionNotAvailable: 1002 as 1002,\n\n  // 403: Forbidden Substatus\n  WriteForbidden: 3\n};\n\nexport type SubStatusCode = typeof SubStatusCode[keyof typeof SubStatusCode];\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}