{"ast":null,"code":"/** @hidden */\nexport class CountAggregator {\n  /**\n   * Represents an aggregator for COUNT operator.\n   * @constructor CountAggregator\n   * @ignore\n   */\n  constructor() {\n    this.value = 0;\n  }\n  /**\n   * Add the provided item to aggregation result.\n   * @memberof CountAggregator\n   * @instance\n   * @param other\n   */\n\n\n  aggregate(other) {\n    this.value += other;\n  }\n  /**\n   * Get the aggregation result.\n   * @memberof CountAggregator\n   * @instance\n   */\n\n\n  getResult() {\n    return this.value;\n  }\n\n}","map":{"version":3,"sources":["../../../src/queryExecutionContext/Aggregators/CountAggregator.ts"],"names":[],"mappings":"AAIA;AACA,OAAM,MAAO,eAAP,CAAsB;AAE1B;;;;;AAKA,EAAA,WAAA,GAAA;AACE,SAAK,KAAL,GAAa,CAAb;AACD;AACD;;;;;;;;AAMO,EAAA,SAAS,CAAC,KAAD,EAAc;AAC5B,SAAK,KAAL,IAAc,KAAd;AACD;AAED;;;;;;;AAKO,EAAA,SAAS,GAAA;AACd,WAAO,KAAK,KAAZ;AACD;;AA3ByB","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { Aggregator } from \"./Aggregator\";\n\n/** @hidden */\nexport class CountAggregator implements Aggregator {\n  public value: number;\n  /**\n   * Represents an aggregator for COUNT operator.\n   * @constructor CountAggregator\n   * @ignore\n   */\n  constructor() {\n    this.value = 0;\n  }\n  /**\n   * Add the provided item to aggregation result.\n   * @memberof CountAggregator\n   * @instance\n   * @param other\n   */\n  public aggregate(other: number) {\n    this.value += other;\n  }\n\n  /**\n   * Get the aggregation result.\n   * @memberof CountAggregator\n   * @instance\n   */\n  public getResult() {\n    return this.value;\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}