{"ast":null,"code":"import { ResourceResponse } from \"../../request/ResourceResponse\";\n/** Response object for Container operations */\n\nexport class ContainerResponse extends ResourceResponse {\n  constructor(resource, headers, statusCode, container) {\n    super(resource, headers, statusCode);\n    this.container = container;\n  }\n\n}","map":{"version":3,"sources":["../../../src/client/Container/ContainerResponse.ts"],"names":[],"mappings":"AAGA,SAAS,gBAAT,QAAiC,gCAAjC;AAKA;;AACA,OAAM,MAAO,iBAAP,SAAiC,gBAAjC,CAAiF;AACrF,EAAA,WAAA,CACE,QADF,EAEE,OAFF,EAGE,UAHF,EAIE,SAJF,EAIsB;AAEpB,UAAM,QAAN,EAAgB,OAAhB,EAAyB,UAAzB;AACA,SAAK,SAAL,GAAiB,SAAjB;AACD;;AAToF","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { CosmosHeaders } from \"../../queryExecutionContext\";\nimport { ResourceResponse } from \"../../request/ResourceResponse\";\nimport { Resource } from \"../Resource\";\nimport { ContainerDefinition } from \"./ContainerDefinition\";\nimport { Container } from \"./index\";\n\n/** Response object for Container operations */\nexport class ContainerResponse extends ResourceResponse<ContainerDefinition & Resource> {\n  constructor(\n    resource: ContainerDefinition & Resource,\n    headers: CosmosHeaders,\n    statusCode: number,\n    container: Container\n  ) {\n    super(resource, headers, statusCode);\n    this.container = container;\n  }\n  /** A reference to the {@link Container} that the returned {@link ContainerDefinition} corresponds to. */\n  public readonly container: Container;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}