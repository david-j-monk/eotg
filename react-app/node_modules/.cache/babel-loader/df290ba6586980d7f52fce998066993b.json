{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { AverageAggregator } from \"./AverageAggregator\";\nimport { CountAggregator } from \"./CountAggregator\";\nimport { MaxAggregator } from \"./MaxAggregator\";\nimport { MinAggregator } from \"./MinAggregator\";\nimport { SumAggregator } from \"./SumAggregator\";\nimport { StaticValueAggregator } from \"./StaticValueAggregator\";\nexport function createAggregator(aggregateType) {\n  switch (aggregateType) {\n    case \"Average\":\n      return new AverageAggregator();\n\n    case \"Count\":\n      return new CountAggregator();\n\n    case \"Max\":\n      return new MaxAggregator();\n\n    case \"Min\":\n      return new MinAggregator();\n\n    case \"Sum\":\n      return new SumAggregator();\n\n    default:\n      return new StaticValueAggregator();\n  }\n}\nexport { AverageAggregator, CountAggregator, MaxAggregator, MinAggregator, SumAggregator };","map":{"version":3,"sources":["../../../src/queryExecutionContext/Aggregators/index.ts"],"names":[],"mappings":"AAAA;AACA;AACA,SAAS,iBAAT,QAAkC,qBAAlC;AACA,SAAS,eAAT,QAAgC,mBAAhC;AACA,SAAS,aAAT,QAA8B,iBAA9B;AACA,SAAS,aAAT,QAA8B,iBAA9B;AACA,SAAS,aAAT,QAA8B,iBAA9B;AACA,SAAS,qBAAT,QAAsC,yBAAtC;AAGA,OAAM,SAAU,gBAAV,CAA2B,aAA3B,EAAuD;AAC3D,UAAQ,aAAR;AACE,SAAK,SAAL;AACE,aAAO,IAAI,iBAAJ,EAAP;;AACF,SAAK,OAAL;AACE,aAAO,IAAI,eAAJ,EAAP;;AACF,SAAK,KAAL;AACE,aAAO,IAAI,aAAJ,EAAP;;AACF,SAAK,KAAL;AACE,aAAO,IAAI,aAAJ,EAAP;;AACF,SAAK,KAAL;AACE,aAAO,IAAI,aAAJ,EAAP;;AACF;AACE,aAAO,IAAI,qBAAJ,EAAP;AAZJ;AAcD;AAED,SAAS,iBAAT,EAA4B,eAA5B,EAA6C,aAA7C,EAA4D,aAA5D,EAA2E,aAA3E","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { AverageAggregator } from \"./AverageAggregator\";\nimport { CountAggregator } from \"./CountAggregator\";\nimport { MaxAggregator } from \"./MaxAggregator\";\nimport { MinAggregator } from \"./MinAggregator\";\nimport { SumAggregator } from \"./SumAggregator\";\nimport { StaticValueAggregator } from \"./StaticValueAggregator\";\nimport { AggregateType } from \"../../request/ErrorResponse\";\n\nexport function createAggregator(aggregateType: AggregateType) {\n  switch (aggregateType) {\n    case \"Average\":\n      return new AverageAggregator();\n    case \"Count\":\n      return new CountAggregator();\n    case \"Max\":\n      return new MaxAggregator();\n    case \"Min\":\n      return new MinAggregator();\n    case \"Sum\":\n      return new SumAggregator();\n    default:\n      return new StaticValueAggregator();\n  }\n}\n\nexport { AverageAggregator, CountAggregator, MaxAggregator, MinAggregator, SumAggregator };\nexport { Aggregator } from \"./Aggregator\";\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}