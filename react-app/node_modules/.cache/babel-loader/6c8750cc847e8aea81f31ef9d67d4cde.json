{"ast":null,"code":"import { ResourceResponse } from \"../../request\";\nexport class PermissionResponse extends ResourceResponse {\n  constructor(resource, headers, statusCode, permission) {\n    super(resource, headers, statusCode);\n    this.permission = permission;\n  }\n\n}","map":{"version":3,"sources":["../../../src/client/Permission/PermissionResponse.ts"],"names":[],"mappings":"AAGA,SAAS,gBAAT,QAAiC,eAAjC;AAMA,OAAM,MAAO,kBAAP,SAAkC,gBAAlC,CAEL;AACC,EAAA,WAAA,CACE,QADF,EAEE,OAFF,EAGE,UAHF,EAIE,UAJF,EAIwB;AAEtB,UAAM,QAAN,EAAgB,OAAhB,EAAyB,UAAzB;AACA,SAAK,UAAL,GAAkB,UAAlB;AACD;;AATF","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { CosmosHeaders } from \"../../queryExecutionContext\";\nimport { ResourceResponse } from \"../../request\";\nimport { Resource } from \"../Resource\";\nimport { Permission } from \"./Permission\";\nimport { PermissionBody } from \"./PermissionBody\";\nimport { PermissionDefinition } from \"./PermissionDefinition\";\n\nexport class PermissionResponse extends ResourceResponse<\n  PermissionDefinition & PermissionBody & Resource\n> {\n  constructor(\n    resource: PermissionDefinition & PermissionBody & Resource,\n    headers: CosmosHeaders,\n    statusCode: number,\n    permission: Permission\n  ) {\n    super(resource, headers, statusCode);\n    this.permission = permission;\n  }\n  /** A reference to the {@link Permission} corresponding to the returned {@link PermissionDefinition}. */\n  public readonly permission: Permission;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}