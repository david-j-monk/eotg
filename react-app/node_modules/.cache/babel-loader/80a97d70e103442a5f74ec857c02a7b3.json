{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { parsePath } from \"./common\";\n/**\n * @ignore\n * @param document\n * @param partitionKeyDefinition\n */\n\nexport function extractPartitionKey(document, partitionKeyDefinition) {\n  if (partitionKeyDefinition && partitionKeyDefinition.paths && partitionKeyDefinition.paths.length > 0) {\n    const partitionKey = [];\n    partitionKeyDefinition.paths.forEach(path => {\n      const pathParts = parsePath(path);\n      let obj = document;\n\n      for (const part of pathParts) {\n        if (!(typeof obj === \"object\" && part in obj)) {\n          obj = undefined;\n          break;\n        }\n\n        obj = obj[part];\n      }\n\n      partitionKey.push(obj);\n    });\n\n    if (partitionKey.length === 1 && partitionKey[0] === undefined) {\n      return undefinedPartitionKey(partitionKeyDefinition);\n    }\n\n    return partitionKey;\n  }\n}\n/**\n * @ignore\n * @param partitionKeyDefinition\n */\n\nexport function undefinedPartitionKey(partitionKeyDefinition) {\n  if (partitionKeyDefinition.systemKey === true) {\n    return [];\n  } else {\n    return [{}];\n  }\n}","map":{"version":3,"sources":["../src/extractPartitionKey.ts"],"names":[],"mappings":"AAAA;AACA;AACA,SAAS,SAAT,QAA0B,UAA1B;AAGA;;;;;;AAKA,OAAM,SAAU,mBAAV,CACJ,QADI,EAEJ,sBAFI,EAE0C;AAE9C,MACE,sBAAsB,IACtB,sBAAsB,CAAC,KADvB,IAEA,sBAAsB,CAAC,KAAvB,CAA6B,MAA7B,GAAsC,CAHxC,EAIE;AACA,UAAM,YAAY,GAAmB,EAArC;AACA,IAAA,sBAAsB,CAAC,KAAvB,CAA6B,OAA7B,CAAsC,IAAD,IAAiB;AACpD,YAAM,SAAS,GAAG,SAAS,CAAC,IAAD,CAA3B;AACA,UAAI,GAAG,GAAG,QAAV;;AACA,WAAK,MAAM,IAAX,IAAmB,SAAnB,EAA8B;AAC5B,YAAI,EAAE,OAAO,GAAP,KAAe,QAAf,IAA2B,IAAI,IAAI,GAArC,CAAJ,EAA+C;AAC7C,UAAA,GAAG,GAAG,SAAN;AACA;AACD;;AACD,QAAA,GAAG,GAAG,GAAG,CAAC,IAAD,CAAT;AACD;;AACD,MAAA,YAAY,CAAC,IAAb,CAAkB,GAAlB;AACD,KAXD;;AAYA,QAAI,YAAY,CAAC,MAAb,KAAwB,CAAxB,IAA6B,YAAY,CAAC,CAAD,CAAZ,KAAoB,SAArD,EAAgE;AAC9D,aAAO,qBAAqB,CAAC,sBAAD,CAA5B;AACD;;AACD,WAAO,YAAP;AACD;AACF;AACD;;;;;AAIA,OAAM,SAAU,qBAAV,CAAgC,sBAAhC,EAA8E;AAClF,MAAI,sBAAsB,CAAC,SAAvB,KAAqC,IAAzC,EAA+C;AAC7C,WAAO,EAAP;AACD,GAFD,MAEO;AACL,WAAO,CAAC,EAAD,CAAP;AACD;AACF","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { parsePath } from \"./common\";\nimport { PartitionKey, PartitionKeyDefinition } from \"./documents\";\n\n/**\n * @ignore\n * @param document\n * @param partitionKeyDefinition\n */\nexport function extractPartitionKey(\n  document: any,\n  partitionKeyDefinition: PartitionKeyDefinition\n): PartitionKey[] {\n  if (\n    partitionKeyDefinition &&\n    partitionKeyDefinition.paths &&\n    partitionKeyDefinition.paths.length > 0\n  ) {\n    const partitionKey: PartitionKey[] = [];\n    partitionKeyDefinition.paths.forEach((path: string) => {\n      const pathParts = parsePath(path);\n      let obj = document;\n      for (const part of pathParts) {\n        if (!(typeof obj === \"object\" && part in obj)) {\n          obj = undefined;\n          break;\n        }\n        obj = obj[part];\n      }\n      partitionKey.push(obj);\n    });\n    if (partitionKey.length === 1 && partitionKey[0] === undefined) {\n      return undefinedPartitionKey(partitionKeyDefinition);\n    }\n    return partitionKey;\n  }\n}\n/**\n * @ignore\n * @param partitionKeyDefinition\n */\nexport function undefinedPartitionKey(partitionKeyDefinition: PartitionKeyDefinition) {\n  if (partitionKeyDefinition.systemKey === true) {\n    return [];\n  } else {\n    return [{}];\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}