{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n// All aggregates are effectively a group by operation\n// The empty group is used for aggregates without a GROUP BY clause\nexport const emptyGroup = \"__empty__\"; // Newer API versions rewrite the query to return `item2`. It fixes some legacy issues with the original `item` result\n// Aggregator code should use item2 when available\n\nexport const extractAggregateResult = payload => payload.item2 ? payload.item2 : payload.item;","map":{"version":3,"sources":["../../../src/queryExecutionContext/EndpointComponent/emptyGroup.ts"],"names":[],"mappings":"AAAA;AACA;AAEA;AACA;AACA,OAAO,MAAM,UAAU,GAAG,WAAnB,C,CAEP;AACA;;AACA,OAAO,MAAM,sBAAsB,GAAI,OAAD,IACpC,OAAO,CAAC,KAAR,GAAgB,OAAO,CAAC,KAAxB,GAAgC,OAAO,CAAC,IADnC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n// All aggregates are effectively a group by operation\n// The empty group is used for aggregates without a GROUP BY clause\nexport const emptyGroup = \"__empty__\";\n\n// Newer API versions rewrite the query to return `item2`. It fixes some legacy issues with the original `item` result\n// Aggregator code should use item2 when available\nexport const extractAggregateResult = (payload: any) =>\n  payload.item2 ? payload.item2 : payload.item;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}