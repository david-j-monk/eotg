{"ast":null,"code":"/** @hidden */\nexport class SumAggregator {\n  /**\n   * Add the provided item to aggregation result.\n   * @memberof SumAggregator\n   * @instance\n   * @param other\n   */\n  aggregate(other) {\n    if (other === undefined) {\n      return;\n    }\n\n    if (this.sum === undefined) {\n      this.sum = other;\n    } else {\n      this.sum += other;\n    }\n  }\n  /**\n   * Get the aggregation result.\n   * @memberof SumAggregator\n   * @instance\n   */\n\n\n  getResult() {\n    return this.sum;\n  }\n\n}","map":{"version":3,"sources":["../../../src/queryExecutionContext/Aggregators/SumAggregator.ts"],"names":[],"mappings":"AAIA;AACA,OAAM,MAAO,aAAP,CAAoB;AAExB;;;;;;AAMO,EAAA,SAAS,CAAC,KAAD,EAAc;AAC5B,QAAI,KAAK,KAAK,SAAd,EAAyB;AACvB;AACD;;AACD,QAAI,KAAK,GAAL,KAAa,SAAjB,EAA4B;AAC1B,WAAK,GAAL,GAAW,KAAX;AACD,KAFD,MAEO;AACL,WAAK,GAAL,IAAY,KAAZ;AACD;AACF;AAED;;;;;;;AAKO,EAAA,SAAS,GAAA;AACd,WAAO,KAAK,GAAZ;AACD;;AA1BuB","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { Aggregator } from \"./Aggregator\";\n\n/** @hidden */\nexport class SumAggregator implements Aggregator {\n  public sum: number;\n  /**\n   * Add the provided item to aggregation result.\n   * @memberof SumAggregator\n   * @instance\n   * @param other\n   */\n  public aggregate(other: number) {\n    if (other === undefined) {\n      return;\n    }\n    if (this.sum === undefined) {\n      this.sum = other;\n    } else {\n      this.sum += other;\n    }\n  }\n\n  /**\n   * Get the aggregation result.\n   * @memberof SumAggregator\n   * @instance\n   */\n  public getResult() {\n    return this.sum;\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}