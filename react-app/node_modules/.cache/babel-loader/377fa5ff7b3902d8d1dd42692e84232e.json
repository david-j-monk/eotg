{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * @ignore\n */\nexport const StatusCodes = {\n  // Success\n  Ok: 200,\n  Created: 201,\n  Accepted: 202,\n  NoContent: 204,\n  NotModified: 304,\n  // Client error\n  BadRequest: 400,\n  Unauthorized: 401,\n  Forbidden: 403,\n  NotFound: 404,\n  MethodNotAllowed: 405,\n  RequestTimeout: 408,\n  Conflict: 409,\n  Gone: 410,\n  PreconditionFailed: 412,\n  RequestEntityTooLarge: 413,\n  TooManyRequests: 429,\n  RetryWith: 449,\n  // Server Error\n  InternalServerError: 500,\n  ServiceUnavailable: 503,\n  // Operation pause and cancel. These are FAKE status codes for QOS logging purpose only.\n  OperationPaused: 1200,\n  OperationCancelled: 1201\n};\n/**\n * @ignore\n */\n\nexport const SubStatusCodes = {\n  Unknown: 0,\n  // 400: Bad Request Substatus\n  CrossPartitionQueryNotServable: 1004,\n  // 410: StatusCodeType_Gone: substatus\n  PartitionKeyRangeGone: 1002,\n  // 404: NotFound Substatus\n  ReadSessionNotAvailable: 1002,\n  // 403: Forbidden Substatus\n  WriteForbidden: 3,\n  DatabaseAccountNotFound: 1008\n};","map":{"version":3,"sources":["../../src/common/statusCodes.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;;;AAGA,OAAO,MAAM,WAAW,GAAG;AACzB;AACA,EAAA,EAAE,EAAE,GAFqB;AAGzB,EAAA,OAAO,EAAE,GAHgB;AAIzB,EAAA,QAAQ,EAAE,GAJe;AAKzB,EAAA,SAAS,EAAE,GALc;AAMzB,EAAA,WAAW,EAAE,GANY;AAQzB;AACA,EAAA,UAAU,EAAE,GATa;AAUzB,EAAA,YAAY,EAAE,GAVW;AAWzB,EAAA,SAAS,EAAE,GAXc;AAYzB,EAAA,QAAQ,EAAE,GAZe;AAazB,EAAA,gBAAgB,EAAE,GAbO;AAczB,EAAA,cAAc,EAAE,GAdS;AAezB,EAAA,QAAQ,EAAE,GAfe;AAgBzB,EAAA,IAAI,EAAE,GAhBmB;AAiBzB,EAAA,kBAAkB,EAAE,GAjBK;AAkBzB,EAAA,qBAAqB,EAAE,GAlBE;AAmBzB,EAAA,eAAe,EAAE,GAnBQ;AAoBzB,EAAA,SAAS,EAAE,GApBc;AAsBzB;AACA,EAAA,mBAAmB,EAAE,GAvBI;AAwBzB,EAAA,kBAAkB,EAAE,GAxBK;AA0BzB;AACA,EAAA,eAAe,EAAE,IA3BQ;AA4BzB,EAAA,kBAAkB,EAAE;AA5BK,CAApB;AA+BP;;;;AAGA,OAAO,MAAM,cAAc,GAAG;AAC5B,EAAA,OAAO,EAAE,CADmB;AAG5B;AACA,EAAA,8BAA8B,EAAE,IAJJ;AAM5B;AACA,EAAA,qBAAqB,EAAE,IAPK;AAS5B;AACA,EAAA,uBAAuB,EAAE,IAVG;AAY5B;AACA,EAAA,cAAc,EAAE,CAbY;AAc5B,EAAA,uBAAuB,EAAE;AAdG,CAAvB","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * @ignore\n */\nexport const StatusCodes = {\n  // Success\n  Ok: 200 as 200,\n  Created: 201 as 201,\n  Accepted: 202 as 202,\n  NoContent: 204 as 204,\n  NotModified: 304 as 304,\n\n  // Client error\n  BadRequest: 400 as 400,\n  Unauthorized: 401 as 401,\n  Forbidden: 403 as 403,\n  NotFound: 404 as 404,\n  MethodNotAllowed: 405 as 405,\n  RequestTimeout: 408 as 408,\n  Conflict: 409 as 409,\n  Gone: 410 as 410,\n  PreconditionFailed: 412 as 412,\n  RequestEntityTooLarge: 413 as 413,\n  TooManyRequests: 429 as 429,\n  RetryWith: 449 as 449,\n\n  // Server Error\n  InternalServerError: 500 as 500,\n  ServiceUnavailable: 503 as 503,\n\n  // Operation pause and cancel. These are FAKE status codes for QOS logging purpose only.\n  OperationPaused: 1200 as 1200,\n  OperationCancelled: 1201 as 1201\n};\n\n/**\n * @ignore\n */\nexport const SubStatusCodes = {\n  Unknown: 0 as 0,\n\n  // 400: Bad Request Substatus\n  CrossPartitionQueryNotServable: 1004 as 1004,\n\n  // 410: StatusCodeType_Gone: substatus\n  PartitionKeyRangeGone: 1002 as 1002,\n\n  // 404: NotFound Substatus\n  ReadSessionNotAvailable: 1002 as 1002,\n\n  // 403: Forbidden Substatus\n  WriteForbidden: 3 as 3,\n  DatabaseAccountNotFound: 1008 as 1008\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}